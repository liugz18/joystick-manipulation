clear
original=imread(strcat('test5','.jpg'));
background=imread(strcat('test0','.jpg'));
gray=rgb2gray(original);
gray_bg=rgb2gray(background);
%减去背景光的算法会把信号也减去
% isShow=1;
% w=3;
% %1.最小值滤波
% bk=ordfilt2(bk,1,ones(w,w),'symmetric');
% if isShow==1
%    figure
%    subplot(2,2,1)
%   imshow(bk,[]),title('最小值滤波之后的结果');    %显示滤波后的图象
% end
% %2.均值滤波
% h=ones(w,w)/(w*w);
% bk=imfilter(bk,h,'replicate');
% if isShow==1
%    subplot(2,2,2)
%    imshow(bk,[]),title('均值滤波之后的结果');    %显示滤波后的图象
% end
% %3.减掉亮度不均的结果
% newIm=imsubtract(double(gray),bk);
% if isShow==1
%   subplot(2,2,3)
%   imshow(newIm,[]);title('去背景图');
% end
% %4.二值化分割出目标
% th=graythresh(newIm/255);
% newIm=im2bw(newIm/255,th);
% if isShow==1
%   subplot(2,2,4)
%   imshow(newIm),title('二值化的结果');    %显示滤波后的图象
% end
%直接二值化无法识别
% th=graythresh(I/255);
% newIm=im2bw(I/255,th);
%结果为纯色
%newIm=grayslice(I,200);
%调整直方图，可以考虑
%gray=histeq(gray);
%Im=histeq(gray_bg);
Im=gray-gray_bg*0.9;
newIm=adapthisteq(Im);
newnewIm=adapthisteq(newIm);
%newIm=histeq(Im);
filter=fspecial('gaussian',[10 10],3);
newIm=imfilter(newIm,filter);
newnewIm=imfilter(newnewIm,filter);
[center,radii]=imfindcircles(newnewIm,[13 39],'Sensitivity',0.87,'EdgeThreshold',0.32);
figure
subplot(1,3,1);
imshow(original)
subplot(1,3,2);
imshow(newIm)
subplot(1,3,3);
imshow(newnewIm)
figure
imshow(newnewIm);
viscircles(center,radii);
%imwrite(Im,'result.jpg')
